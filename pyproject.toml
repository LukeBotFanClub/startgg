[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning[plugin]"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
metadata = true
style = "semver"

[tool.poetry]
name = "startgg"
version = "0.0.0"
authors = [
  "Charlie Wilson <charles.ep.wilson@gmail.com>",
]
description = "Python wrapper for the start.gg GraphQL API, built using ariadne-codegen"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Framework :: Pytest",
    "Natural Language :: English",
    "Topic :: Games/Entertainment",
]

[tool.poetry.dependencies]
python = "^3.11"
httpx = "^0.24"
pydantic = "^1.10"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ariadne-codegen = "^0.6"
pytest = "^7.1.2"
ruff = "^0.0.262"
black = "^23.3.0"
docformatter = { extras = ["tomli"], version = "^1.6.2" }
pyright = "^1.1.304"

[tool.poetry.urls]
"Homepage" = "https://github.com/LukeBotFanClub/startgg"
"repository" = "https://github.com/LukeBotFanClub/startgg.git"
"Bug Tracker" = "https://github.com/LukeBotFanClub/startgg/issues"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.ruff]
# Enable flake8-bugbear (`B`) rules.
select = ["E", "F", "B", "I"]

# Never enforce `E501` (line length violations).
ignore = ["E501"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]

[tool.black]
target-version = ['py311']
preview = true

[tool.docformatter]
recursive = true

[tool.pyright]
pythonVersion = "3.11"

[tool.ariadne-codegen]
target_package_name = "startgg"
client_name = "StartGGClient"
remote_schema_headers = {"Authorization" = "$STARTGG_TOKEN"}
remote_schema_url = "https://api.start.gg/gql/alpha"
queries_path = "queries.graphql"
include_comments =  false

[tool.ariadne-codegen.scalars.Timestamp]
type = "datetime.datetime"
[tool.ariadne-codegen.scalars.JSON]
type = "pydantic.Json"